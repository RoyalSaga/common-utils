import static fr.il_totore.manadrop.MinecraftDependencyHelper.paperApi
import static fr.il_totore.manadrop.MinecraftRepositoryHelper.*

plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.4.20'
    id 'fr.il_totore.manadrop' version '0.4.1-SNAPSHOT'
    id 'maven-publish'
    id 'org.jetbrains.dokka' version '1.4.20'
}

group 'net.royalsaga.minecraft'
version '0.0.11'

def GITHUB_ORG = 'RoyalSaga'
def GITHUB_REPO = project.name

repositories {
    mavenCentral()
    jcenter()

    spigotSnapshot()
    paperPublic()
    sonatype()

    maven {
        url = 'https://repo.codemc.org/repository/maven-public/'
    }

    maven {
        url = 'https://jitpack.io'
    }
}

dependencies {
    compileOnly 'org.jetbrains.kotlin:kotlin-stdlib'
    compileOnly 'me.mattstudios.utils:matt-framework-gui:2.0.3'
    //compileOnly 'com.github.MilkBowl:VaultAPI:1.7'
    //compileOnly fileTree(include: ['*.jar'], dir: 'libs')
    compileOnly paperApi('1.16.4')
}

compileJava.options.encoding = "UTF-8"

compileKotlin.kotlinOptions {
    jvmTarget = JavaVersion.VERSION_11
    javaParameters = true
}

/*
java {
    withJavadocJar()
    withSourcesJar()
}*/

/*
javadoc {
    options.encoding("UTF-8")

    if (options instanceof StandardJavadocDocletOptions) {
        def opt = options as StandardJavadocDocletOptions

        opt.links(
                "https://javadoc.io/doc/org.jetbrains/annotations/20.1.0/"
        )

        if (JavaVersion.current().isJava9Compatible()) {
            opt.addBooleanOption("html5", true)
            opt.addStringOption("-release", "8")
        }

        if (JavaVersion.current().isJava11Compatible()) {
            opt.addBooleanOption("-no-module-directories", true)
        }
    }
}
 */

/*
task packageJavadoc(type: Jar, dependsOn: dokkaJavadoc) {
    archiveClassifier.set('javadoc')
    from "$buildDir/dokka/javadoc"
}
*/

task packageJavadoc(type: Jar, dependsOn: javadoc) {
    archiveClassifier.set('javadoc')
}

javadoc {
    options.encoding("UTF-8")

    if (options instanceof StandardJavadocDocletOptions) {
        def opt = options as StandardJavadocDocletOptions

        opt.links(
                "https://javadoc.io/doc/org.jetbrains/annotations/20.1.0/"
        )

        if (JavaVersion.current().isJava9Compatible()) {
            opt.addBooleanOption("html5", true)
            opt.addStringOption("-release", "8")
        }

        if (JavaVersion.current().isJava11Compatible()) {
            opt.addBooleanOption("-no-module-directories", true)
        }
    }
}

task packageSources(type: Jar) {
    archiveClassifier.set('sources')
    from sourceSets.main.allSource
}

publishing {
    publications {
        gpr(MavenPublication) {
            from components.java

            artifact packageSources
            artifact packageJavadoc

            pom {
                url = "https://github.com/$GITHUB_ORG/$GITHUB_REPO"

                scm {
                    connection = "scm:git:git://github.com/$GITHUB_ORG/${GITHUB_REPO}.git"
                    developerConnection = "scm:git:ssh://github.com:$GITHUB_ORG/${GITHUB_REPO}.git"
                    url = "http://github.com/$GITHUB_ORG/$GITHUB_REPO"
                }
            }
        }
    }

    repositories {
        /*
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/$GITHUB_ORG/$GITHUB_REPO")

            credentials {
                username = System.getenv("GITHUB_USERNAME")
                password = System.getenv("GITHUB_PACKAGES_TOKEN")
            }
        }*/

        mavenLocal()
    }
}

